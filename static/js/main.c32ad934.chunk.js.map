{"version":3,"sources":["images/GRAND_LOTTO.png","images/LOTTO.png","images/MEGA_LOTTO.png","images/SUPER_LOTTO.png","images/ULTRA_LOTTO.png","getLottoType.js","AppStyle.js","LottoSelection.js","NumberDisplay.js","Buttons.js","Modal.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","generateLottoProperties","max","length","arguments","undefined","canRepeat","getLottoType","theme","bodyColor","GlobalStyle","createGlobalStyle","_templateObject","showModal","AppContainer","styled","div","_templateObject2","Header","header","_templateObject3","Container","LottoSelection_templateObject","ImageContainer","LottoSelection_templateObject2","img","LottoSelectionContainer","label","LottoSelection_templateObject3","isChecked","LottoSelection","_ref","value","onChange","name","selectedValue","onClick","react_default","a","createElement","htmlFor","concat","id","type","react","ultraLottoImg","title","grandLottoImg","superLottoImg","megaLottoImg","lottoImg","src_LottoSelection","_ref2","values","others","Object","objectWithoutProperties","map","i","LottoSelection_LottoSelection","assign","key","NumberDisplay_templateObject","NumberDisplay","span","NumberDisplay_templateObject2","emptyValues","fill","Array","src_NumberDisplay","numbers","displayValues","generateNumber","NumberDisplay_Container","n","BaseButton","button","Buttons_templateObject","IconButton","Buttons_templateObject2","inverted","primary","ModalContainer","Modal_templateObject","Modal","Modal_templateObject2","ModalHeader","Modal_templateObject3","ModalBody","_templateObject4","ModalSubHeading","h3","_templateObject5","src_Modal","closeModal","e","stopPropagation","href","fi","generateLottoNumbers","_ref$len","len","_ref$max","_ref$canRepeat","range","reduce","acc","cur","num","random","includes","App","state","lottoType","this","setState","target","lottoTypeObject","_this$state","styled_components_browser_esm","toggleAbout","bind","size","changeLottoType","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c32ad934.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GRAND_LOTTO.85efbe71.png\";","module.exports = __webpack_public_path__ + \"static/media/LOTTO.baa8b7c6.png\";","module.exports = __webpack_public_path__ + \"static/media/MEGA_LOTTO.8f432586.png\";","module.exports = __webpack_public_path__ + \"static/media/SUPER_LOTTO.760f2916.png\";","module.exports = __webpack_public_path__ + \"static/media/ULTRA_LOTTO.14d95dea.png\";","export const ULTRA_LOTTO = 'ULTRA_LOTTO';\nexport const GRAND_LOTTO = 'GRAND_LOTTO';\nexport const SUPER_LOTTO = 'SUPER_LOTTO';\nexport const MEGA_LOTTO = 'MEGA_LOTTO';\nexport const LOTTO = 'LOTTO';\n\nconst generateLottoProperties = (max, length = 6, canRepeat = false) => {\n    return {\n        max,\n        length,\n        canRepeat,\n    }\n}\n\nexport default (lotto = LOTTO) => {\n    switch (lotto) {\n        case LOTTO: return generateLottoProperties(42);\n        case MEGA_LOTTO: return generateLottoProperties(45);\n        case SUPER_LOTTO: return generateLottoProperties(49);\n        case GRAND_LOTTO: return generateLottoProperties(55);\n        case ULTRA_LOTTO:\n        default:\n            return generateLottoProperties(58);\n    }\n}","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nexport const theme = {\n    bodyColor: '#4a4a4a'\n}\n\nexport const GlobalStyle = createGlobalStyle`\n    *,\n    *:before,\n    *:after {\n        box-sizing: border-box;\n    }\n\n    html,\n    body {\n        font-size: 100%;\n        line-height: 1.5;\n        margin: 0;\n        padding: 0;\n        font-family: Verdana, 'sans-serif';\n        color: ${p => p.theme.bodyColor};\n        ${p => p.showModal ? `\n            height: 100vh;\n            overflow: hidden;\n            ` : ''}\n    }\n\n    p {\n        -webkit-margin-before: 0;\n        -webkit-margin-after: 0;\n        -webkit-margin-start: 0;\n        -webkit-margin-end: 0;\n    }\n`\n\nexport const AppContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 1rem;\n\n    max-width: 500px;\n    margin-left: auto;\n    margin-right: auto;\n\n    background-color: #f2f2f2;\n    min-height: calc(100vh - 32px);\n`\n\nexport const Header = styled.header`\n    padding: 0.25rem 0.5rem;\n    font-size: 0.75rem;\n    text-transform: uppercase;\n    letter-spacing: 0.05em;\n    background-color: ${p => p.theme.bodyColor};\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport grandLottoImg from './images/GRAND_LOTTO.png';\nimport lottoImg from './images/LOTTO.png';\nimport megaLottoImg from './images/MEGA_LOTTO.png';\nimport superLottoImg from './images/SUPER_LOTTO.png';\nimport ultraLottoImg from './images/ULTRA_LOTTO.png';\n\nimport {\n    ULTRA_LOTTO,\n    GRAND_LOTTO,\n    SUPER_LOTTO,\n    MEGA_LOTTO,\n    LOTTO,\n} from './getLottoType';\n\nconst Container = styled.div`\n    display: flex;\n    width: 100%;\n    align-items: flex-start;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    padding: 0.5rem;\n`;\n\nconst ImageContainer = styled.div`\n    border-radius: 4px;\n    box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.2);\n    height: 4rem;\n    width: 100%;\n    background-size: 90%;\n    background-image: url(${p => p.img});\n    background-repeat: no-repeat;\n    background-position: center;\n    flex-shrink: 0;\n    background-color: white;\n`;\n\nconst LottoSelectionContainer = styled.label`\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    flex-direction: column;\n    cursor: pointer;\n    padding: 0.5rem;\n    flex-grow: 0;\n    width: 20%;\n    min-width: 5rem;\n\n    opacity: ${p => p.isChecked ? '1' : '0.4'};\n\n    input {\n        display: none;\n    }\n`;\n\nexport const LottoSelection = ({ value, onChange, name, selectedValue, onClick }) => (\n    <LottoSelectionContainer\n        htmlFor={`${name}-${value}`}\n        isChecked={value === selectedValue}>\n        <input\n            name={name}\n            id={`${name}-${value}`}\n            type=\"radio\"\n            onClick={value === selectedValue ? onClick : null}\n            onChange={onChange}\n            value={value}\n        />\n        {value === ULTRA_LOTTO && (\n            <Fragment>\n                <ImageContainer img={ultraLottoImg} title=\"Ultra Lotto\" />\n                <p>Ultra Lotto</p>\n            </Fragment>\n        )}\n        {value === GRAND_LOTTO && (\n            <Fragment>\n                <ImageContainer img={grandLottoImg} title=\"Grand Lotto\" />\n                <p>Grand Lotto</p>\n            </Fragment>\n        )}\n        {value === SUPER_LOTTO && (\n            <Fragment>\n                <ImageContainer img={superLottoImg} title=\"Super Lotto\" />\n                <p>Super Lotto</p>\n            </Fragment>\n        )}\n        {value === MEGA_LOTTO && (\n            <Fragment>\n                <ImageContainer img={megaLottoImg} title=\"Mega Lotto\" />\n                <p>Mega Lotto</p>\n            </Fragment>\n        )}\n        {value === LOTTO && (\n            <Fragment>\n                <ImageContainer img={lottoImg} title=\"Lotto\" />\n                <p>Lotto</p>\n            </Fragment>\n        )}\n    </LottoSelectionContainer>\n);\n\nexport default ({ values, ...others }) => (\n    <Container>\n        {values.map((type, i) => (\n            <LottoSelection\n                key={i}\n                value={type}\n                {...others}\n            />\n        ))}\n    </Container>\n);\n","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport { fill } from 'lodash';\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 0.5rem;\n    justify-content: center;\n    width: 100%;\n    flex-wrap: wrap;\n`\n\nconst NumberDisplay = styled.span`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-shadow: 0 2px 2px 0 rgba(0,0,0,0.2);\n    padding: 1rem;\n    height: 4rem;\n    width: 4rem;\n    margin-left: 0.25rem;\n    margin-right: 0.25rem;\n\n    flex-shrink: 1;\n    flex-grow: 0;\n\n    border-radius: 50%;\n    font-size: 2rem;\n\n    margin-bottom: 0.5rem;\n    background-color: white;\n`\n\nconst emptyValues = fill(Array(6), '-');\n\nexport default ({numbers, generateNumber}) => {\n    const displayValues = numbers.length ? numbers : emptyValues;\n    return <Container>\n        {displayValues.map( (n,i) => <NumberDisplay key={i}>{n}</NumberDisplay> )}\n    </Container>\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst BaseButton = styled.button`\n    background-color: transparent;\n    border: 0;\n    color: ${p => p.theme.bodyColor};\n    font-size: 1rem;\n`\n\nexport const IconButton = styled(BaseButton)`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0.25rem;\n    color: ${p => p.inverted ? p.theme.primary : 'white'};\n`","import React from 'react';\nimport styled from 'styled-components';\nimport { FiGithub, FiX } from 'react-icons/fi';\nimport { IconButton } from './Buttons';\n\nconst ModalContainer = styled.div`\n    background-color: rgba(0,0,0,0.5);\n    z-index: 10;\n    padding: 1rem;\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nconst Modal = styled.div`\n    background-color: white;\n    border-radius: 0.25rem;\n    width: 100%;\n    min-height: 50vh;\n    max-height: 80vh;\n    position: relative;\n    box-shadow: 0 2px 2px 0 rgba(0,0,0,0.2);\n    display: flex;\n    flex-direction: column;\n\n    button {\n        position: absolute;\n        top: 1rem;\n        right: 0.5rem;\n    }\n`\n\nconst ModalHeader = styled.div`\n    padding: 1rem;\n    border-bottom: 1px solid rgba(0,0,0,0.2);\n    font-weight: bold;\n`\n\nconst ModalBody = styled.div`\n    padding: 1rem;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    padding-bottom: 2rem;\n    overflow: scroll;\n    height: 100%;\n\n    p {\n        margin-bottom: 1rem;\n    }\n\n    a {\n        text-decoration: none;\n        color: ${p => p.theme.bodyColor};\n        border: 2px solid ${p => p.theme.bodyColor};\n        font-size: 0.85rem;\n        display: flex;\n        align-items: center;\n        padding: 0.25rem 0.5rem;\n        border-radius: 0.25rem;\n        flex-shrink: 0;\n        svg {\n            margin-right: 0.25rem;\n        }\n    }\n`\n\nconst ModalSubHeading = styled.h3`\n    text-transform: uppercase;\n    font-size: 0.85rem;\n`\n\nexport default ({closeModal}) => <ModalContainer onClick={closeModal}>\n    <Modal onClick={(e) => e.stopPropagation()}>\n        <ModalHeader>Bakit?</ModalHeader>\n        <ModalBody>\n            <p>Para sa mga taong pagod na mag-isip ng numerong itataya araw-araw.</p>\n            <p>Dahil hindi mo naman pwedeng itaya ang araw ng iyong kapanganakan nang 6 na beses.</p>\n            <p>One-click wonder.</p>\n            <ModalSubHeading>Credits</ModalSubHeading>\n            <p>PCSO Website para sa mga logo</p>\n            <br />\n            <a href=\"https://github.com/oobgam\"><FiGithub /> Github</a>\n        </ModalBody>\n        <IconButton inverted onClick={closeModal}><FiX /></IconButton>\n    </Modal>\n</ModalContainer>","import React, { Component, Fragment } from 'react';\nimport { random, range } from 'lodash';\nimport getLottoType, {\n    ULTRA_LOTTO,\n    GRAND_LOTTO,\n    SUPER_LOTTO,\n    MEGA_LOTTO,\n    LOTTO,\n} from './getLottoType';\nimport { ThemeProvider } from 'styled-components';\nimport { theme, GlobalStyle, AppContainer, Header } from './AppStyle';\nimport LottoSelection from './LottoSelection';\nimport NumberDisplay from './NumberDisplay';\nimport { IconButton } from './Buttons';\nimport { FiHelpCircle } from 'react-icons/fi';\nimport Modal from './Modal';\n\nfunction generateLottoNumbers({ len = 6, max = 52, canRepeat = false }) {\n    return range(len).reduce((acc, cur) => {\n        const num = random(1, max);\n        return canRepeat\n            ? acc.concat(num)\n            : acc.includes(num)\n                ? acc.concat(random(1, max))\n                : acc.concat(num);\n    }, []);\n}\n\nclass App extends Component {\n    state = {\n        numbers: [],\n        lottoType: '',\n        showModal: false\n    };\n\n    generateNumber() {\n        const { lottoType } = this.state;\n        this.setState({\n            numbers: generateLottoNumbers(getLottoType(lottoType)),\n        });\n    }\n\n    toggleAbout() {\n        this.setState({showModal: !this.state.showModal});\n    }\n\n    closeModal() {\n        this.setState({showModal: false});\n    }\n\n    changeLottoType(e) {\n        const { value } = e.target;\n        const lottoTypeObject = getLottoType(value);\n        this.setState({\n            lottoType: value,\n            numbers: generateLottoNumbers(lottoTypeObject),\n        });\n    }\n\n    render() {\n        const { numbers, lottoType, showModal } = this.state;\n        return (\n            <ThemeProvider theme={theme}>\n                <Fragment>\n                    <GlobalStyle showModal={showModal}/>\n                    <Header>\n                        <strong>Sana Manalo</strong>\n                        <IconButton onClick={this.toggleAbout.bind(this)}><FiHelpCircle size=\"1rem\"/></IconButton>\n                    </Header>\n                    <AppContainer>\n                        <NumberDisplay numbers={numbers}/>\n                        <LottoSelection\n                            values={[\n                                ULTRA_LOTTO,\n                                GRAND_LOTTO,\n                                SUPER_LOTTO,\n                                MEGA_LOTTO,\n                                LOTTO,\n                            ]}\n                            name=\"lottoType\"\n                            selectedValue={lottoType}\n                            onClick={this.generateNumber.bind(this)}\n                            onChange={this.changeLottoType.bind(this)}\n                        />\n                    </AppContainer>\n                    { showModal && <Modal closeModal={this.closeModal.bind(this)}/> }\n                </Fragment>\n            </ThemeProvider>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}